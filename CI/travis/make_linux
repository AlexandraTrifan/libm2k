#!/bin/sh -xe

if [ "x${COVERITY_SCAN_PROJECT_NAME}" != "x" ] ; then exit 0; fi

. CI/travis/lib.sh

handle_default() {
	mkdir -p build
	cd build

	#create simple .deb without Python bindings
	cmake -DENABLE_PACKAGING=ON -DDEB_DETECT_DEPENDENCIES=ON -DENABLE_PYTHON=OFF -DENABLE_CSHARP=ON -DENABLE_TOOLS=ON -DCMAKE_INSTALL_PREFIX=/usr ..
	make && make package
	ls

	#create deb for bindings
	sudo python3 setup.py --command-packages=stdeb.command sdist_dsc
	cd "$(find . -type d -name "debian" | head -n 1)"
	sudo env DEB_BUILD_OPTIONS=nocheck debuild -us -uc
	cd ../../..
}

handle_centos() {
	mkdir -p build
	cd build
	cmake -DENABLE_PACKAGING=ON -DENABLE_PYTHON=OFF -DENABLE_CSHARP=ON -DENABLE_TOOLS=ON -DCMAKE_INSTALL_PREFIX=/usr ..
	make && make package
	cd ..
}

handle_centos_docker() {
	run_docker_script inside_docker.sh \
		"centos:centos${OS_VERSION}" "centos"
}

handle_ubuntu_docker() {
	run_docker_script inside_docker.sh \
		"ubuntu:${OS_VERSION}"
}

handle_doxygen() {
	./CI/travis/doxygen.sh
}

LIBNAME="$1"
OS_TYPE=${2:-default}
OS_VERSION="$3"

handle_${OS_TYPE}


